<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lec.spring.repository.CommentRepository"> <!-- join 을 사용해서 댓글의 정보와 user 정보를 가져옴 -->

    <resultMap id="myUser" type="com.lec.spring.domain.User">
        <result column="u_id" property="id"/>
        <result column="u_username" property="username"/>
        <result column="u_name" property="name"/>
    </resultMap>
    <resultMap id="mapComment" type="com.lec.spring.domain.Comment">
        <result column="c_id" property="id"/> <!-- c_id 를 Comment 의 id에 매핑 -->
        <result column="c_content" property="content"/><!-- 각각 c_~~를 Commnet 에 매핑 -->
        <result column="c_regdate" property="regDate"/>
        <result column="c_request_id" property="request_id"/>

        <collection property="user" resultMap="myUser"/> <!-- Comment 의 setUser 는 mapUser 가 매핑 -->

    </resultMap>

    <select id="findByWrite" resultMap="mapComment">
        SELECT
            c.id "c_id",
            c.content "c_content",
            c.regDate "c_regDate",
            c.request_id "c_request_id",<!-- 여기까지 comment에 들어옴 -->
            u.id "u_id",
            u.username "u_username",
            u.name "u_name"
            <!-- user에 들어옴 -->
        FROM request_comment c, user u
        WHERE
            c.user_id = u.id
        AND c.request_id = #{param1} <!-- 글의 아이디 값이 들어옴 -->
        ORDER BY c.id DESC

    </select>

    <insert id="save" flushCache="true" parameterType="com.lec.spring.domain.Comment"
            keyProperty="id" useGeneratedKeys="true" keyColumn="id">
        INSERT INTO request_comment(user_id, request_id, content)
        VALUES(#{user.id}, #{request_id}, #{content})<!-- getUser().getId() -> 안에서 아이디 값을 가져와야함 , ,getContent 값 Comment 객체로 부터 가져옴 -->
    </insert>

    <delete id="deleteById" flushCache="true">
        DELETE FROM request_comment WHERE id = #{id}
    </delete>

</mapper>